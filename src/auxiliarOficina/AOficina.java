/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package auxiliarOficina;

import inicioSesion.InicioSesion;
import EstructurasAux.ItemInventario;
import EstructurasAux.cotizaciones;
import EstructurasAux.itemsOrdenCompra;
import EstructurasAux.itemxproveedor;
import EstructurasAux.proveedor;
import EstructurasAux.solicitudPr;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import interfaces.Usuario;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.rmi.RemoteException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Oscar_Malagon
 */
public class AOficina extends javax.swing.JFrame {

    private static BigDecimal id = null;
    private static String area = null;
    private static final GregorianCalendar hoy = new GregorianCalendar();
    private static String cadenaFecha = hoy.get(Calendar.DAY_OF_MONTH) + "/" + (hoy.get(Calendar.MONTH) + 1) + "/" + hoy.get(Calendar.YEAR);

    /**
     * Creates new form administrador
     *
     * @param ide
     */
    public AOficina(String ide) {
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setSize(this.getMaximumSize());
        initComponents();
        setIcon();
        id = new BigDecimal(ide);
        Usuario u = cliente.Cliente.conectarU();
        String user = null;
        try {
            user = u.getUsuario(id, "ao");
            area = u.area(id);
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ArrayList<proveedor> todosProveedores = u.todosProveedores();
            for (proveedor p : todosProveedores) {
                this.Apro_NITProv.addItem(p.getNIT());
            }
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.BotonRefrescarSol.doClick();
        this.BotonRefrescarSolRev.doClick();
    }

    private AOficina() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelAdministrador = new javax.swing.JLabel();
        ButtonCerrarSesion = new javax.swing.JButton();
        TabbedPaneUsuarios = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        tabbedReportes = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaSolicitudesRev = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaSolicitudesNoRev = new javax.swing.JTable();
        BotonRefrescarSol = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        BotonCotizar = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TablaSolicitudesRev = new javax.swing.JTable();
        BotonRefrescarSolRev = new javax.swing.JButton();
        btnRealizarOrden = new javax.swing.JButton();
        btnAyudaOrden = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        btnVerProv = new javax.swing.JButton();
        Apro_NITProv = new javax.swing.JComboBox();
        jPanel9 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        fechaOrden = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        oc_nomProv = new javax.swing.JLabel();
        oc_nit = new javax.swing.JLabel();
        oc_dir = new javax.swing.JLabel();
        oc_cel = new javax.swing.JLabel();
        oc_fax = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jScrollPane9 = new javax.swing.JScrollPane();
        tablaDatosPedido = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        obsOrden = new javax.swing.JTextArea();
        jSeparator9 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        numorden = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaitemsCot = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        numeroSolicitudCot = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        fechaCot = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        areaCot = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        nombreCot = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        obsCot = new javax.swing.JTextField();
        BotonRevisar = new javax.swing.JButton();
        BotonAyudaCot = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaIXP = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelAdministrador.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelAdministrador.setText("Auxiliar de Oficina");

        ButtonCerrarSesion.setText("Cerrar Sesi√≥n");
        ButtonCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCerrarSesionActionPerformed(evt);
            }
        });

        TabbedPaneUsuarios.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Solicitudes no revisadas");

        tablaSolicitudesRev.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero de Solicitud", "Fecha", "Observaciones", "Responsable Area"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaSolicitudesRev);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Solicitudes revisadas");

        tablaSolicitudesNoRev.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero de Solicitud", "Fecha", "Observaciones", "Responsable Area"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tablaSolicitudesNoRev);

        BotonRefrescarSol.setText("Refrescar");
        BotonRefrescarSol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRefrescarSolActionPerformed(evt);
            }
        });

        BotonCotizar.setText("Realizar Cotizacion");
        BotonCotizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCotizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel11)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 540, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BotonRefrescarSol, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BotonCotizar, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 409, Short.MAX_VALUE)
                .addComponent(BotonCotizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonRefrescarSol)
                .addContainerGap())
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(456, Short.MAX_VALUE)))
        );

        tabbedReportes.addTab("Solicitudes", jPanel6);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Descripci√≥n");

        jLabel19.setText("Esta pesta√±a le permite ver las solicitudes que han sido aprobadas por el Director Administrativo Comercial");

        TablaSolicitudesRev.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N¬∞ Cotizaci√≥n", "Aux Oficina", "Resp. √Årea", "Proveedor", "Inv", "C√≥digo", "Cant. Solicitada", "Cant. Aprobada", "Precio Unitario", "Num Solicitud"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(TablaSolicitudesRev);

        BotonRefrescarSolRev.setText("Refrescar");
        BotonRefrescarSolRev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRefrescarSolRevActionPerformed(evt);
            }
        });

        btnRealizarOrden.setText("Realizar Orden Compra");
        btnRealizarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarOrdenActionPerformed(evt);
            }
        });

        btnAyudaOrden.setText("Ayuda");
        btnAyudaOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaOrdenActionPerformed(evt);
            }
        });

        jLabel28.setText("Ingrese el NIT del proveedor ");

        btnVerProv.setText("Ver Listado de Proveedores");
        btnVerProv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerProvActionPerformed(evt);
            }
        });

        Apro_NITProv.setMaximumRowCount(3);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRealizarOrden)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonRefrescarSolRev))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19))
                            .addComponent(btnAyudaOrden))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Apro_NITProv, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVerProv)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAyudaOrden)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(btnVerProv)
                    .addComponent(Apro_NITProv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonRefrescarSolRev)
                    .addComponent(btnRealizarOrden))
                .addContainerGap())
        );

        tabbedReportes.addTab("Aprobadas", jPanel8);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedReportes)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedReportes)
        );

        TabbedPaneUsuarios.addTab("Reportes", jPanel2);

        jLabel20.setText("Fecha");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("Datos Proveedor");

        jLabel23.setText("Nombre Proveedor/Prestador del servicio");

        jLabel24.setText("NIT");

        jLabel25.setText("Direcci√≥n");

        jLabel26.setText("Celular");

        jLabel27.setText("Telefax");

        tablaDatosPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Interno", "Descripci√≥n", "Cantidad", "Presentaci√≥n", "Valor Unitario", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tablaDatosPedido);

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setText("Datos Pedido");

        jLabel40.setText("Total");

        total.setText("jLabel41");

        jLabel42.setText("Observaciones");

        obsOrden.setColumns(20);
        obsOrden.setRows(5);
        jScrollPane10.setViewportView(obsOrden);

        jButton1.setText("Generar .pdf");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel21.setText("Numero de Orden");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                    .addComponent(jSeparator7)
                    .addComponent(jSeparator8)
                    .addComponent(jSeparator9)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(206, 206, 206)
                                .addComponent(fechaOrden)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(270, 270, 270)
                                .addComponent(oc_nomProv)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(numorden))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 573, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane10)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(jLabel23)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel27))
                                .addGap(256, 256, 256)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(oc_nit)
                                    .addComponent(oc_dir)
                                    .addComponent(oc_fax)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addGap(190, 190, 190)
                                .addComponent(total))
                            .addComponent(jLabel42)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(299, 299, 299)
                                .addComponent(oc_cel, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(fechaOrden))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel21))
                .addGap(9, 9, 9)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(oc_nomProv)
                    .addComponent(numorden))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(oc_nit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel26))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(oc_dir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(oc_cel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(oc_fax))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(total))
                .addGap(18, 18, 18)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        TabbedPaneUsuarios.addTab("Orden Compra", jPanel9);

        tablaitemsCot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inv Actual", "Lab", "C√≥digo", "Descripci√≥n", "Cantidad Solicitada", "Presentaci√≥n", "Precio Unitario", "Proveedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tablaitemsCot);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("N¬∞ Solicitud");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Fecha");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Area o proceso Solicitante");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Nombre de Solicitante");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Item por Proveedor");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Observaciones");

        BotonRevisar.setText("Enviar Cotizaci√≥n");
        BotonRevisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRevisarActionPerformed(evt);
            }
        });

        BotonAyudaCot.setText("Ayuda");
        BotonAyudaCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAyudaCotActionPerformed(evt);
            }
        });

        tablaIXP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIT", "Nombre", "Cod Interno", "Inventario", "Precio"
            }
        ));
        jScrollPane1.setViewportView(tablaIXP);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel14))
                                .addGap(93, 93, 93)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fechaCot)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(numeroSolicitudCot)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(BotonAyudaCot))))
                            .addComponent(obsCot, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel18))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nombreCot)
                                            .addComponent(areaCot)))
                                    .addComponent(jLabel13)
                                    .addComponent(BotonRevisar))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(numeroSolicitudCot))
                    .addComponent(BotonAyudaCot))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fechaCot)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(areaCot)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nombreCot)
                    .addComponent(jLabel18))
                .addGap(12, 12, 12)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(obsCot, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonRevisar)
                .addContainerGap())
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        TabbedPaneUsuarios.addTab("Cotizaciones", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelAdministrador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonCerrarSesion))
                    .addComponent(TabbedPaneUsuarios))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelAdministrador)
                    .addComponent(ButtonCerrarSesion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabbedPaneUsuarios)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCerrarSesionActionPerformed
        InicioSesion i = new InicioSesion();
        i.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_ButtonCerrarSesionActionPerformed

    private void BotonAyudaCotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAyudaCotActionPerformed
        JOptionPane.showMessageDialog(areaCot, "Antes de enviar la cotizaci√≥n debe seleccionar"
                + "todas las filas que desea actualizar. \nPuede ayudarse con el boton Ctrl");
    }//GEN-LAST:event_BotonAyudaCotActionPerformed

    private void BotonRevisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRevisarActionPerformed
        Usuario u = cliente.Cliente.conectarU();
        boolean act = false;
        boolean actPrecio = false;
        DefaultTableModel df = (DefaultTableModel) this.tablaSolicitudesNoRev.getModel();
        DefaultTableModel df_itemsCot = (DefaultTableModel) this.tablaitemsCot.getModel();
        int filaSolicitud = this.tablaSolicitudesNoRev.getSelectedRow();
        int itemsAct[] = this.tablaitemsCot.getSelectedRows();
        BigDecimal numSol = (BigDecimal) df.getValueAt(filaSolicitud, 0);
        String lab;
        String codigo;
        float precio;
        for (int ite : itemsAct) {
            lab = (String) df_itemsCot.getValueAt(ite, 1);
            codigo = df_itemsCot.getValueAt(ite, 2).toString();
            precio = new Float(df_itemsCot.getValueAt(ite, 6).toString());
            try {
                System.out.println(id + " " + codigo + " " + lab + " " + numSol + " " + precio);
                actPrecio = u.generarCotizacion(id, df_itemsCot.getValueAt(ite, 7).toString(), codigo, lab, numSol, precio);
            } catch (RemoteException ex) {
                Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            act = u.RevisarSolicitud(AOficina.id, numSol, "SI");
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (act == true && actPrecio == true) {
            JOptionPane.showMessageDialog(rootPane, "Hecho!");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Error Actualizando");
        }
        this.BotonRefrescarSol.doClick();
        this.Apro_NITProv.setVisible(true);
    }//GEN-LAST:event_BotonRevisarActionPerformed

    private void BotonCotizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCotizarActionPerformed
        Usuario u = cliente.Cliente.conectarU();
        DefaultTableModel df = (DefaultTableModel) tablaSolicitudesNoRev.getModel();
        DefaultTableModel df_items = (DefaultTableModel) this.tablaitemsCot.getModel();
        TableColumn cCalidadCell = this.tablaitemsCot.getColumnModel().getColumn(7);
        int filaSeleccionada = this.tablaSolicitudesNoRev.getSelectedRow();
        BigDecimal numSol = (BigDecimal) df.getValueAt(filaSeleccionada, 0);
        solicitudPr solicitud_NumSol = null;
        try {
            solicitud_NumSol = u.getSolicitud_NumSol(numSol);
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
        GregorianCalendar fecha = solicitud_NumSol.getFecha();
        ArrayList<ItemInventario> items_numSol = null;
        try {
            items_numSol = u.getItems_numSol(numSol);
            for (ItemInventario i : items_numSol) {
                System.out.println(i.getNumero());
                System.out.println(i.getInventario());
            }
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
        ArrayList<itemxproveedor> itemxproveedor = null;
        for (int i = df_items.getRowCount() - 1; i >= 0; i--) {
            df_items.removeRow(i);
        }
        this.numeroSolicitudCot.setText(numSol.toString());
        this.fechaCot.setText(fecha.get(Calendar.DAY_OF_MONTH) + "/" + (fecha.get(Calendar.MONTH) + 1) + "/" + fecha.get(Calendar.YEAR));
        this.areaCot.setText(solicitud_NumSol.getArea());
        this.nombreCot.setText(solicitud_NumSol.getNombreRA());
        this.TabbedPaneUsuarios.setSelectedIndex(2);
        for (ItemInventario i : items_numSol) {
            Object[] datos = new Object[7];
            datos[0] = i.getCantidad();
            datos[1] = i.getInventario();
            datos[2] = i.getNumero();
            datos[3] = i.getDescripcion();
            datos[4] = i.getCantidadSolicitada();
            datos[5] = i.getPresentacion();
            datos[6] = i.getPrecio();
            df_items.addRow(datos);
        }
        cCalidadCell.setCellEditor(new DefaultCellEditor(Apro_NITProv));
        this.obsCot.setText(solicitud_NumSol.getObservaciones());
        //llenado de la tabla de ixp

        tablaitemsCot.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                System.out.println("escucha");
                String toString = tablaitemsCot.getValueAt(tablaitemsCot.getSelectedRow(), 2).toString();
                llenarTablaIXP(toString);
                
            }
        });
    }//GEN-LAST:event_BotonCotizarActionPerformed

    private void llenarTablaIXP(String item) {
        Usuario n = cliente.Cliente.conectarU();
        DefaultTableModel df_ixp = (DefaultTableModel) tablaIXP.getModel();
        ArrayList<itemxproveedor> tablaCotizacionesIXP = null;
        /*for (int i = df_ixp.getRowCount() - 1; i >= 0; i--) {
                    df_ixp.removeRow(i);
                }
        */
        try {
            tablaCotizacionesIXP = n.tablaCotizacionesIXP(item);
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (itemxproveedor i : tablaCotizacionesIXP) {
            Object[] datos = new Object[5];
            datos[0] = i.getNIT();
            datos[1] = i.getNombre();
            datos[2] = i.getCinterno();
            datos[3] = i.getInv();
            datos[4] = i.getPrecio();
            df_ixp.addRow(datos);
        }
    }


    private void BotonRefrescarSolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRefrescarSolActionPerformed
        DefaultTableModel df_NoRevisadas = (DefaultTableModel) this.tablaSolicitudesNoRev.getModel();
        Usuario u = cliente.Cliente.conectarU();
        for (int i = df_NoRevisadas.getRowCount() - 1; i >= 0; i--) {
            df_NoRevisadas.removeRow(i);
        }
        ArrayList<solicitudPr> solNoRev = null;
        try {
            solNoRev = u.getNoRevisadas();
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
        GregorianCalendar fecha = new GregorianCalendar();
        for (solicitudPr s : solNoRev) {
            fecha = s.getFecha();
            Object[] datos = new Object[4];
            datos[0] = s.getSolicitudpr_id();
            datos[1] = fecha.get(Calendar.DAY_OF_MONTH) + "/" + (fecha.get(Calendar.MONTH) + 1) + "/" + fecha.get(Calendar.YEAR);
            datos[2] = s.getObservaciones();
            datos[3] = s.getNombreRA();

            /*
            
             Vector datos = new Vector();
             datos.add(s.getSolicitudpr_id());
             datos.add(fecha.get(Calendar.DAY_OF_MONTH) + "/" + (fecha.get(Calendar.MONTH) + 1) + "/" + fecha.get(Calendar.YEAR));
             datos.add(s.getObservaciones());
             datos.add(s.getNombreRA());*/
            df_NoRevisadas.addRow(datos);
        }
        //---------------------------------------------------------------------
        DefaultTableModel df_Revisadas = (DefaultTableModel) this.tablaSolicitudesRev.getModel();
        for (int i = df_Revisadas.getRowCount() - 1; i >= 0; i--) {
            df_Revisadas.removeRow(i);
        }
        ArrayList<solicitudPr> solRev = null;
        try {
            solRev = u.getRevisadas();
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
        GregorianCalendar fecha1 = new GregorianCalendar();
        for (solicitudPr s : solRev) {
            fecha1 = s.getFecha();
            Object[] datos = new Object[4];
            datos[0] = s.getSolicitudpr_id();
            datos[1] = fecha.get(Calendar.DAY_OF_MONTH) + "/" + (fecha.get(Calendar.MONTH) + 1) + "/" + fecha.get(Calendar.YEAR);
            datos[2] = s.getObservaciones();
            datos[3] = s.getNombreRA();
            /*
             Vector datos = new Vector();
             datos.add(s.getSolicitudpr_id());
             datos.add(fecha.get(Calendar.DAY_OF_MONTH) + "/" + (fecha.get(Calendar.MONTH) + 1) + "/" + fecha.get(Calendar.YEAR));
             datos.add(s.getObservaciones());
             datos.add(s.getNombreRA());*/
            df_Revisadas.addRow(datos);
        }

    }//GEN-LAST:event_BotonRefrescarSolActionPerformed

    private void BotonRefrescarSolRevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRefrescarSolRevActionPerformed
        DefaultTableModel df = (DefaultTableModel) this.TablaSolicitudesRev.getModel();
        Usuario u = cliente.Cliente.conectarU();
        for (int i = df.getRowCount() - 1; i >= 0; i--) {
            df.removeRow(i);
        }
        ArrayList<cotizaciones> cotizacione;
        try {
            cotizacione = u.getCotizaciones("SI");
            for (cotizaciones c : cotizacione) {
                Object[] datos = new Object[10];
                datos[0] = c.getCotizacionId();
                datos[1] = c.getAO();
                datos[2] = c.getRA();
                datos[3] = c.getProveedor();
                datos[4] = c.getLab();
                datos[5] = c.getCinterno();
                datos[6] = c.getCantSol();
                datos[7] = u.getCantAprobada(c);
                c.setCantApr(u.getCantAprobada(c));
                datos[8] = c.getPrecioUnitario();
                datos[9] = c.getNumSol();

                /*Vector datos = new Vector();
                 datos.add(c.getCotizacionId());
                 datos.add(c.getAO());
                 datos.add(c.getRA());
                 datos.add(c.getProveedor());
                 datos.add(c.getLab());
                 datos.add(c.getCinterno());
                 datos.add(c.getCantSol());
                 datos.add(u.getCantAprobada(c));
                 c.setCantApr(u.getCantAprobada(c));
                 datos.add(c.getPrecioUnitario());
                 datos.add(c.getNumSol());*/
                df.addRow(datos);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotonRefrescarSolRevActionPerformed

    private void btnRealizarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarOrdenActionPerformed
        Usuario u = cliente.Cliente.conectarU();
        this.fechaOrden.setText(hoy.get(Calendar.DAY_OF_MONTH) + "/" + (hoy.get(Calendar.MONTH) + 1) + "/" + hoy.get(Calendar.YEAR));
        String proveedor = this.Apro_NITProv.getSelectedItem().toString();
        DefaultTableModel df = (DefaultTableModel) this.tablaDatosPedido.getModel();
        for (int i = df.getRowCount() - 1; i >= 0; i--) {
            df.removeRow(i);
        }
        float total1 = 0;
        String com = "";
        ArrayList<itemsOrdenCompra> pedidoOrdenCompra = new ArrayList<>();
        try {
            proveedor prov = u.getDatosProveedor(proveedor);
            if (prov != null) {
                this.oc_nomProv.setText(prov.getNombre());
                this.oc_nit.setText(prov.getNIT());
                this.oc_dir.setText(prov.getDireccion());
                this.oc_cel.setText(prov.getTelefono());
                this.oc_fax.setText(prov.getTelefax());
                pedidoOrdenCompra = u.pedidoOrdenCompra(proveedor);
                for (itemsOrdenCompra p : pedidoOrdenCompra) {
                    Object[] datos = new Object[6];
                    datos[0] = p.getCinterno();
                    datos[1] = p.getInventario();
                    datos[2] = p.getCaprobada();
                    datos[3] = p.getPresen();
                    datos[4] = p.getPrecioU();
                    datos[5] = p.getvTotal();
                    total1 += p.getvTotal();
                    com += p.getObs() + " // ";
                    df.addRow(datos);
                }
            }
            this.total.setText(Float.toString(total1));
            this.obsOrden.setText(com);
            u.crearOrdenCompra(AOficina.id);
            BigDecimal numOrden = u.OrdenValida(id);
            this.numorden.setText(numOrden.toString());
            boolean valido = u.itemsxorden(numOrden, proveedor, pedidoOrdenCompra, com);
            if (valido == true) {
                JOptionPane.showMessageDialog(null, "Hecho...Numero de Orden: " + numOrden.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error!");
            }
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.TabbedPaneUsuarios.setSelectedIndex(1);
    }//GEN-LAST:event_btnRealizarOrdenActionPerformed

    private void btnAyudaOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaOrdenActionPerformed
        String msg = "Debe seleccionar el NIT del proveedor al cual le va a realizar un pedido";
        JOptionPane.showMessageDialog(null, msg);
    }//GEN-LAST:event_btnAyudaOrdenActionPerformed

    private void btnVerProvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerProvActionPerformed
        Usuario u = cliente.Cliente.conectarU();
        try {
            ArrayList<proveedor> todosProveedores = u.todosProveedores();
            ArrayList<Object> tabla = new ArrayList<>();
            for (proveedor t : todosProveedores) {
                Object[] datos = new Object[2];
                datos[0] = t.getNIT();
                datos[1] = t.getNombre();
                /*
                 Vector datos = new Vector();
                 datos.add(t.getNIT());
                 datos.add(t.getNombre());*/
                tabla.add(datos);
            }
            verProveedores ver = new verProveedores();
            ver.setVisible(true);
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnVerProvActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Usuario u = cliente.Cliente.conectarU();
            proveedor p = new proveedor(this.oc_nomProv.getText(), this.oc_nit.getText(), this.oc_dir.getText(), this.oc_cel.getText(), this.oc_fax.getText(), "", "");
            ArrayList<itemsOrdenCompra> pedidoOrdenCompra = u.pedidoOrdenCompra(this.oc_nit.getText());
            float total1 = new Float(this.total.getText());
            String obs = this.obsOrden.getText();
            String numorden1 = this.numorden.getText();
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.showOpenDialog(this);
            String path = chooser.getSelectedFile().getPath();
            File pdf_002 = this.pdf_002(path, p, pedidoOrdenCompra, total1, obs, numorden1);
            u.actualizarCotEnOrden(pedidoOrdenCompra);
            if (JOptionPane.showConfirmDialog(null, "¬øDesea abrir el archivo?", "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                Desktop.getDesktop().open(pdf_002);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AOficina.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AOficina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AOficina().setVisible(true);
            }
        });
    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("iconB.png")));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Apro_NITProv;
    private javax.swing.JButton BotonAyudaCot;
    private javax.swing.JButton BotonCotizar;
    private javax.swing.JButton BotonRefrescarSol;
    private javax.swing.JButton BotonRefrescarSolRev;
    private javax.swing.JButton BotonRevisar;
    private javax.swing.JButton ButtonCerrarSesion;
    private javax.swing.JTabbedPane TabbedPaneUsuarios;
    private javax.swing.JTable TablaSolicitudesRev;
    private javax.swing.JLabel areaCot;
    private javax.swing.JButton btnAyudaOrden;
    private javax.swing.JButton btnRealizarOrden;
    private javax.swing.JButton btnVerProv;
    private javax.swing.JLabel fechaCot;
    private javax.swing.JLabel fechaOrden;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel labelAdministrador;
    private javax.swing.JLabel nombreCot;
    private javax.swing.JLabel numeroSolicitudCot;
    private javax.swing.JLabel numorden;
    private javax.swing.JTextField obsCot;
    private javax.swing.JTextArea obsOrden;
    private javax.swing.JLabel oc_cel;
    private javax.swing.JLabel oc_dir;
    private javax.swing.JLabel oc_fax;
    private javax.swing.JLabel oc_nit;
    private javax.swing.JLabel oc_nomProv;
    private javax.swing.JTabbedPane tabbedReportes;
    private javax.swing.JTable tablaDatosPedido;
    private javax.swing.JTable tablaIXP;
    private javax.swing.JTable tablaSolicitudesNoRev;
    private javax.swing.JTable tablaSolicitudesRev;
    private javax.swing.JTable tablaitemsCot;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables

    public File pdf_002(String ruta, proveedor p, ArrayList<itemsOrdenCompra> pedido, float total, String obs, String numorden) throws RemoteException {
        Usuario u = cliente.Cliente.conectarU();
        String nombreAO = u.getNombreAO(AOficina.id.toString());
        File pdf = null;
        Document documento = new Document(PageSize.A4);
        System.out.println(documento.getPageSize());
        boolean setMargins = documento.setMargins(40, 0, 40, 40);
        Font bf_titulos = FontFactory.getFont(FontFactory.TIMES_ROMAN);//BaseFont.createFont(BaseFont.TIMES_ROMAN,BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
        bf_titulos.setStyle(Font.BOLD);
        bf_titulos.setSize(9);
        Font bf_titulos1 = FontFactory.getFont(FontFactory.TIMES_ROMAN);//BaseFont.createFont(BaseFont.TIMES_ROMAN,BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
        bf_titulos1.setStyle(Font.BOLD);
        bf_titulos1.setSize(8);
        String espaciado = "                        ";
        String linea = "________________________________";
        float tamanoEncabezado[] = {20, 60, 30};
        float TamdatosProv[] = {50, 30, 40, 40, 40};
        float tamanoItems[] = {20, 50, 20, 30, 30, 30};
        float tamanoProv[] = {40, 30, 30, 50};
        float tamFecha[] = {70, 30};
        GregorianCalendar today = new GregorianCalendar();
        try {
            FileOutputStream fichero = new FileOutputStream(ruta + "\\NumeroOrden_" + numorden + ".pdf");
            PdfWriter escribir = PdfWriter.getInstance(documento, fichero);
            documento.open();
            Image logo = Image.getInstance("http://www.biotrendslab.com/wp-content/uploads/2014/03/Logo_Biotrends2.png");
            PdfPTable tabla = new PdfPTable(tamanoEncabezado);
            PdfPTable fecha = new PdfPTable(tamFecha);
            PdfPTable datosProv = new PdfPTable(TamdatosProv);
            PdfPTable items = new PdfPTable(tamanoItems);
            PdfPTable pie1 = new PdfPTable(1);
            PdfPTable pie2 = new PdfPTable(2);
            //el numero indica la cantidad de Columnas
            tabla.addCell(new Paragraph("F-DC-002\nRevision 04\nFecha\nActualizacion\n01-dic-13", bf_titulos));
            tabla.addCell(new Paragraph("\nORDEN DE COMPRA", bf_titulos));
            tabla.addCell(logo);
            fecha.addCell(new Paragraph("FECHA ELABORACION" + today.get(Calendar.DAY_OF_MONTH) + "/" + (today.get(Calendar.MONTH) + 1) + "/" + today.get(Calendar.YEAR), bf_titulos));
            fecha.addCell(new Paragraph("N¬∞ ORDEN: " + numorden));
            datosProv.addCell(new Paragraph("NOMBRE PROVEEDOR/PRESTADOR DEL SERVICIO", bf_titulos));
            datosProv.addCell(new Paragraph("NIT", bf_titulos));
            datosProv.addCell(new Paragraph("DIRECCION", bf_titulos));
            datosProv.addCell(new Paragraph("CELULAR", bf_titulos));
            datosProv.addCell(new Paragraph("TELEFAX", bf_titulos));

            datosProv.addCell(new Paragraph(p.getNombre(), bf_titulos1));
            datosProv.addCell(new Paragraph(p.getNIT(), bf_titulos1));
            datosProv.addCell(new Paragraph(p.getDireccion(), bf_titulos1));
            datosProv.addCell(new Paragraph(p.getTelefono(), bf_titulos1));
            datosProv.addCell(new Paragraph(p.getTelefax(), bf_titulos1));

            items.addCell(new Paragraph("C.INTERNO", bf_titulos1));
            items.addCell(new Paragraph("DESCRIPCION", bf_titulos1));
            items.addCell(new Paragraph("CANTIDAD", bf_titulos1));
            items.addCell(new Paragraph("PRESENTACION", bf_titulos1));
            items.addCell(new Paragraph("VALOR UNITARIO", bf_titulos1));
            items.addCell(new Paragraph("VALOR TOTAL", bf_titulos1));
            int numeroFilas = 132 - (pedido.size() * 6);

            for (itemsOrdenCompra i : pedido) {
                System.out.println(i.getCaprobada());
            }
            for (itemsOrdenCompra i : pedido) {
                items.addCell(new Paragraph(i.getInventario() + "-" + i.getCinterno(), bf_titulos1));
                items.addCell(new Paragraph(i.getDesc(), bf_titulos1));
                items.addCell(new Paragraph(Float.toString(i.getCaprobada()), bf_titulos1));
                items.addCell(new Paragraph(i.getPresen(), bf_titulos1));
                items.addCell(new Paragraph("$" + Float.toString(i.getPrecioU()), bf_titulos1));
                items.addCell(new Paragraph("$" + Float.toString(i.getCaprobada() * i.getPrecioU()), bf_titulos1));

            }
            for (int i = 0; i <= numeroFilas; i++) {
                items.addCell(new Paragraph(" ", bf_titulos));
            }

            pie1.addCell(new Paragraph(espaciado + espaciado + espaciado + "           Biotrends Laboratorios S.A.S", bf_titulos1));
            pie2.addCell(new Paragraph(espaciado + "REVISO: Director Administrativo Comercial", bf_titulos1));
            pie2.addCell(new Paragraph(espaciado + "APROBO: Gerente", bf_titulos1));
            documento.add(tabla);
            documento.add(datosProv);
            documento.add(new Paragraph(Chunk.NEWLINE));
            documento.add(items);
            documento.add(new Paragraph(Chunk.NEWLINE));
            documento.add(new Paragraph(espaciado + "SUBTOTAL (Antes de IVA):  $ " + total, bf_titulos));
            documento.add(new Paragraph(espaciado + "TOTAL:     $ " + total, bf_titulos));
            documento.add(new Paragraph(Chunk.NEWLINE));
            documento.add(new Paragraph(Chunk.NEWLINE));
            String subs1 = "";
            String subs2 = "";
            String subs3 = "";
            documento.add(new Paragraph(espaciado + "OBSERVACIONES:" + espaciado + obs, bf_titulos));
            documento.add(new Paragraph(" ", bf_titulos));
            documento.add(new Paragraph(" ", bf_titulos));
            documento.add(new Paragraph(Chunk.NEWLINE));
            documento.add(new Paragraph(espaciado + nombreAO, bf_titulos));
            documento.add(new Paragraph(espaciado + "REVISION- COMPRAS", bf_titulos));
            documento.add(new Paragraph(Chunk.NEWLINE));
            documento.add(pie1);
            documento.add(pie2);

            documento.close();
            pdf = new File(ruta + "\\NumeroOrden_" + numorden + ".pdf");
        } catch (DocumentException | FileNotFoundException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        return pdf;
    }
}
